--- !ruby/object:RDoc::RI::ClassDescription 
attributes: 
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: -- instance -------------------
  name: back_binding
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: -- instance -------------------
  name: binding
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: -- instance -------------------
  name: event
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: -- instance -------------------
  name: file
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: -- instance -------------------
  name: line
  rw: RW
class_methods: 
- !ruby/object:RDoc::RI::MethodSummary 
  name: activate
- !ruby/object:RDoc::RI::MethodSummary 
  name: active?
- !ruby/object:RDoc::RI::MethodSummary 
  name: clear
- !ruby/object:RDoc::RI::MethodSummary 
  name: deactivate
- !ruby/object:RDoc::RI::MethodSummary 
  name: new
- !ruby/object:RDoc::RI::MethodSummary 
  name: trace
comment: 
- !ruby/struct:RDoc::Markup::Flow::H 
  level: 1
  text: TracePoint
- !ruby/struct:RDoc::Markup::Flow::P 
  body: A TracePoint is a Binding with the addition event information. And it's a better way to use set_trace_func.
- !ruby/struct:RDoc::Markup::Flow::P 
  body: A TracePoint is a Binding with the addition of event information. Among other things, it functions very well as the join-point for Event-based AOP.
- !ruby/struct:RDoc::Markup::Flow::H 
  level: 2
  text: Usage
- !ruby/struct:RDoc::Markup::Flow::VERB 
  body: "  TracePoint.trace { |tp|\n    puts &quot;#{tp.self.class}\\t#{tp.called}\\t#{tp.event}\\t#{tp.return?}\\t#{tp.back == tp.bind}&quot;\n  }\n\n  1 + 1\n"
- !ruby/struct:RDoc::Markup::Flow::P 
  body: produces
- !ruby/struct:RDoc::Markup::Flow::VERB 
  body: "  Class   trace   return     true    false\n  Object          line       false   false\n  Fixnum  +       c-call     false   false\n  Fixnum  +       c-return   false   false\n"
- !ruby/struct:RDoc::Markup::Flow::H 
  level: 2
  text: Notes
- !ruby/struct:RDoc::Markup::Flow::P 
  body: You can't subclass Binding, so we delegate (which is better anyway).
constants: 
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: methods for working with events
  name: EVENT_MAP
  value: "{     :all     => ['call', 'c-call', 'return', 'c-return', 'line', 'class', 'end', 'raise'],     :before  => ['call', 'c-call'],     :after   => ['return', 'c-return'],     :call    => ['call'],     :return  => ['return'],     :ccall   => ['c-call'],     :creturn => ['c-return'],     :line    => ['line'],     :class   => ['class'],     :end     => ['end'],     :raise   => ['raise']   }"
full_name: TracePoint
includes: []

instance_methods: 
- !ruby/object:RDoc::RI::MethodSummary 
  name: ===
- !ruby/object:RDoc::RI::MethodSummary 
  name: back
- !ruby/object:RDoc::RI::MethodSummary 
  name: bind
- !ruby/object:RDoc::RI::MethodSummary 
  name: called
- !ruby/object:RDoc::RI::MethodSummary 
  name: callee
- !ruby/object:RDoc::RI::MethodSummary 
  name: event?
- !ruby/object:RDoc::RI::MethodSummary 
  name: event_map
- !ruby/object:RDoc::RI::MethodSummary 
  name: eventless?
- !ruby/object:RDoc::RI::MethodSummary 
  name: method_name
- !ruby/object:RDoc::RI::MethodSummary 
  name: self
name: TracePoint
superclass: Object
